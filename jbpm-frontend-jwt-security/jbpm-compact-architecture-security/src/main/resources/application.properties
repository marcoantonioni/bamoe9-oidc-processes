# Packaging
#quarkus.package.type=fast-jar

#https://quarkus.io/guides/openapi-swaggerui
quarkus.http.cors=true
quarkus.http.cors.origins=*
quarkus.dev-ui.cors.enabled=false
quarkus.smallrye-openapi.path=/docs/openapi.json
quarkus.swagger-ui.always-include=true
quarkus.kogito.data-index.graphql.ui.always-include=true
quarkus.http.test-port=0

# Kogito-service
kogito.service.url=http://0.0.0.0:8080

#Job-service
kogito.jobs-service.url=http://0.0.0.0:8080
kogito.data-index.url=http://0.0.0.0:8080

# run create tables scripts
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.baseline-version=0.0
quarkus.flyway.locations=classpath:/db/migration,classpath:/db/jobs-service,classpath:/db/data-audit/postgresql
quarkus.flyway.table=FLYWAY_RUNTIME_SERVICE

kogito.persistence.type=jdbc
quarkus.datasource.db-kind=postgresql
%prod.quarkus.datasource.username=kogito-user
%prod.quarkus.datasource.password=kogito-pass
%prod.quarkus.datasource.jdbc.url=${QUARKUS_DATASOURCE_JDBC_URL:jdbc:postgresql://0.0.0.0:5432/kogito}
%prod.quarkus.datasource.reactive.url=${QUARKUS_DATASOURCE_REACTIVE_URL:postgresql://0.0.0.0:5432/kogito}

quarkus.native.native-image-xmx=8g

# profile to pack this example into a container, to use it execute activate the maven container profile, -Pcontainer
%container.quarkus.container-image.build=true
%container.quarkus.container-image.push=false
%container.quarkus.container-image.group=${USER}
%container.quarkus.container-image.registry=dev.local
%container.quarkus.container-image.tag=${project.version}
%container.quarkus.container-image.name=jbpm-compact-architecture-security-service

%dev.jbpm.devui.users.admin.groups=admin
%dev.jbpm.devui.users.jdoe.groups=IT
%dev.jbpm.devui.users.alice.groups=HR
%dev.jbpm.devui.users.marco.groups=GUESTS
%dev.jbpm.devui.users.marco.password=marco


# Disabling OIDC
quarkus.oidc.enabled=false
quarkus.kogito.devservices.enabled=false



#=============================================================
# PoT Customisations from here
#=============================================================

# enabled to test remote hosts calls
quarkus.http.host=0.0.0.0

#=============================================================
# io.quarkus.logging.Log
# OFF	  A special level used in configuration to turn off logging.
# FATAL A critical service failure or total inability to handle any requests.
# ERROR	A major issue in processing or an inability to complete a request.
# WARN	A non-critical service error or problem that might not require immediate correction.
# INFO	Service lifecycle events or other important infrequent information.
# DEBUG	Additional information about lifecycle events or events not tied to specific requests, useful for debugging.
# TRACE	Detailed per-request debugging information, potentially at a very high frequency.
# ALL	  A special level to turn on logging for all messages, including custom levels.
quarkus.log.level=INFO

#=============================================================
# security policies, default types: deny, authenticated, permit

# frontend policy configuration
#quarkus.http.auth.permission.frontend.paths=/bamoe/*
#quarkus.http.auth.permission.frontend.policy=myfrontendsecpolicy

# backend policy configuration
%dev.quarkus.http.auth.permission.backend.paths=/hiring/*
%dev.quarkus.http.auth.permission.backend.policy=permit
quarkus.http.auth.permission.backend.paths=/hiring/*
quarkus.http.auth.permission.backend.policy=mybackendsecpolicy

#=============================================================
# Keycloak configuration
#quarkus.keycloak.devservices.image-name=quay.io/keycloak/keycloak:latest
#quarkus.keycloak.devservices.port=44444
#quarkus.keycloak.devservices.realm-path=my-realm-1-realm.json

#---------------------------------
# Keycloak technical users
# quarkus.oidc-client.grant.type=password
# quarkus.oidc-client.grant-options.password.username=admin3
# quarkus.oidc-client.grant-options.password.password=admin3
# quarkus.oidc-client.grant-options.requestors.username=requestor6
# quarkus.oidc-client.grant-options.requestors.password=requestor6
# quarkus.oidc-client.grant-options.validators.username=validator4
# quarkus.oidc-client.grant-options.validators.password=validator4

#---------------------------------
# OIDC configuration
#%prod.quarkus.oidc.auth-server-url=http://localhost:8180/realms/my-realm-1
#quarkus.oidc-client.auth-server-url=${quarkus.oidc.auth-server-url}
#quarkus.oidc-client.client-id=${quarkus.oidc.client-id}
#quarkus.oidc-client.credentials.secret=${quarkus.oidc.credentials.secret}

#---------------------------------
# OIDC Client configuration
#quarkus.oidc.client-id=my-client-bpm
#quarkus.oidc.credentials.secret=my-secret-bpm

